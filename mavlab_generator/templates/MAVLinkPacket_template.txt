classdef MAVLinkPacket < MAVLinkHandle
    %%MAVLINKPACKET Class
    %%Used to encode and decode MAVLink packets
    
    %%Constant public variables
    properties(Constant)
        STX = 254;  %%The 'magic' byte
    end
    
    %%Private variables
    properties
        len;        %%Length of the packet payload
        seq;        %%Sequence number of the current packet
        sysid;      %%ID of the sending system
        compid;     %%ID of the sending component
        msgid;      %%ID of the message type contained in the payload
        payload;    %%The packet payload
        crc;        %%The crc object for this packet
    end
    
    %%Publically accessible object variables
    methods
        
        %%Constructor: MAVLinkPacket
        %%payloadLength should be an integer between 0 and MAX_PAYLOAD_SIZE
        function obj = MAVLinkPacket(payloadLength)
            obj.len = payloadLength;
            obj.payload = MAVLinkPayload(payloadLength);
        end
        
        %%Function: Generate the CRC checksum for the packet
        function generateCRC(obj)   
            if isempty(obj.crc)
                obj.crc = MAVLinkCRC();
            else
                obj.crc.start_checksum();
            end
            
            obj.crc.updateChecksum(uint8(obj.len));
            obj.crc.updateChecksum(uint8(obj.seq));
            obj.crc.updateChecksum(uint8(obj.sysid));
            obj.crc.updateChecksum(uint8(obj.compid));
            obj.crc.updateChecksum(uint8(obj.msgid));
            
            obj.payload.resetIndex();
            for i = 1:1:obj.payload.getLength()
                obj.crc.updateChecksum(obj.payload.getUINT8());
            end
            obj.crc.finishChecksum(uint8(obj.msgid));
        end
        
        %%Function: Encode the packet into a byte buffer for transmission
        function byteBuffer = encode(obj)
            obj.seq = 1;
            obj.generateCRC();
            byteBuffer = cat(1,uint8(obj.STX),uint8(obj.len),uint8(obj.seq),uint8(obj.sysid),...
                uint8(obj.compid),uint8(obj.msgid),obj.payload.getByteBuffer(),obj.crc.getLSB(), obj.crc.getMSB());
        end
        
        %%Getter: isPayloadFull
        function fillStatus = isPayloadFull(obj)
            fillStatus = obj.payload.isPayloadFull();
        end
        
        %%Function: Unpack the payload and return the correct message type
        function message = unpack(obj)
            message = [];
            switch obj.msgid #{message<#>
                case ${msgid}$
                    message = msg_${name}$(obj);}#
                otherwise
                    MAVLink.throwUnsupportedMessageError(obj.msgid);
            end
        end

    end
end
                